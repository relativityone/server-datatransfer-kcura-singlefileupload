<?xml version="1.0" ?>

<project name="BuildTools.NuGet">
	<property name="nuspec.directory" value="${path::combine(development.scripts, 'NuGet')}" />
	<property name="NuGet.exe.directory" value="${path::combine(vendor.directory, 'NuGet')}" />
	<property name="NuGet_exe" value="${path::combine(NuGet.exe.directory, 'NuGet.exe')}" unless="${property::exists('NuGet_exe')}" />
	<property name="NuGet.Server" value="http://dv-scm-nuget.kcura.corp/NuGet/nuget" />
	<property name="NuGet.Server.Source" value="http://dv-scm-nuget.kcura.corp/NuGet/" />
	<property name="NuGet.Version" value="${version}" unless="${property::exists('NuGet.Version')}"/>
	
	<target name="build_NuGet" depends="NuGet_nuspec_update,NuGet_pack" />
	
	<target name="NuGet_nuspec_update" description="Updates NuGet nuspec file.">
		
	<!-- Use following as template
	
		<xmlpoke
			file="${nuspec.directory}\kCura.Sample.nuspec"
			xpath="/package/metadata/version"
			value="${NuGet.Version}">
		</xmlpoke>
	-->
	</target>
	
	<target name="NuGet_pack" description="Packages and creates a new NuGet package.">	
		<choose>
			<when test="${string::contains(branchDir,'default')}">
			<!-- Use following as template
			
				<exec program="${NuGet_exe}" verbose="true" failonerror="true" workingdir="${nuspec.directory}">
					<arg line="pack ${nuspec.directory}\kCura.Sample.nuspec" />
				</exec>		
			-->
			</when>
			<otherwise>
				<echo message="Based on ${branchDir} BranchDir and it not being default, NuGet package will NOT be created." />
			</otherwise>
		</choose>
	</target>
	
	<target name="NuGet_publish" description="Publishes NuGet package to server">
		<choose>
			<when test="${string::contains(branchDir,'default')}">
				<choose>
					<when test="${string::contains(buildType,'GOLD')}">
					<!-- Use following as template
					
						<exec program="${NuGet_exe}" verbose="true" failonerror="true" workingdir="${nuspec.directory}">
							<arg line="push kCura.Sample.${NuGet.Version}.nupkg -Source ${NuGet.Server.Source}" />
						</exec>		
					-->
					</when>
					<otherwise>
						<echo message="Based on ${buildType} BuildType NuGet package will NOT be published." />
					</otherwise>
				</choose>
			</when>
			<otherwise>
				<echo message="Based on ${branchDir} BranchDir and it not being default, NuGet package will NOT be published." />
			</otherwise>
		</choose>
	</target>	
</project>