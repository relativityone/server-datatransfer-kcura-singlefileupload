<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:s="http://www.outsideinsdk.com/xmlns/searchml/3.6" targetNamespace="http://www.outsideinsdk.com/xmlns/searchml/3.6" elementFormDefault="qualified" xml:lang="en">
	<xsd:annotation>
		<xsd:documentation>
			SearchML Schema
			
 Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.

			This work is protected by United States and international copyright
			laws and contains certain trade secret information. All use of this
			work is governed by the terms of agreements between Oracle
			and its licensees or potential licensees. Disclosure of the contents
			is prohibited.
		</xsd:documentation>
	</xsd:annotation>
	<xsd:element name="searchml">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					The root element of a SearchML document (the {@term XML Document Element}).
				</xsd:documentation>
			</xsd:annotation>
			<xsd:sequence>
				<xsd:element name="document" type="s:document"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="document">
		<xsd:annotation>
			<xsd:documentation>
				Document elements represent &amp;quot;whole&amp;quot; documents, acting as a container for both {@link doc_content} and
				{@link doc_properties} elements.  They may be encountered as children of other elements.  
				As a child of {@link doc_content}, documents are fully contained sub-documents,
				such as archived files in a zip document.  As a child of {@link p} (paragraph), documents are embedded
				sub-documents, such as a WordPerfect Graphic embedded in a WordPerfect file.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="object" type="s:object"/>
			<xsd:element name="error" type="s:error"/>
			<xsd:element name="doc_properties" type="s:doc_properties"/>
			<xsd:element name="doc_content" type="s:doc_content"/>
		</xsd:choice>
		<xsd:attribute name="type" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					The name of the original encoding format for this document.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="name" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					The name of the document, if known.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="alt_string" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					The alt. string of the document, if present.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="doc_properties">
		<xsd:annotation>
			<xsd:documentation>
				Doc_properties act as a container for {@link doc_property} elements.  They, along with {@link doc_content} elements
				are used to separate the content and properties portions of a {@link document}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="doc_property" type="s:doc_property" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="object">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Sub-document object information.  This element provides a type and paramter 
				data to be used in addressing sub-documents using the SCCDAOBJECT structure.<br/>
				Generated by the SCCEX_XML_PRODUCEOBJECTINFO option.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="type" type="xsd:hexBinary" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Provides information for the dwObjectType field in SCCDAOBJECT.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="param1" type="xsd:hexBinary" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Provides information for the dwData1 field in SCCDAOBJECT.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="param2" type="xsd:hexBinary" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Provides information for the dwData2 field in SCCDAOBJECT.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="param3" type="xsd:hexBinary" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Provides information for the dwData3 field in SCCDAOBJECT.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="param4" type="xsd:hexBinary" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Provides information for the dwData4 field in SCCDAOBJECT.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="tree_node_locator">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Archive tree node information.  This element provides a flags and paramter data
				to be used in randomly accessing archive sub-documents.  Using the SCCDATREENODELOCATOR
				structure.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="flags" type="xsd:hexBinary" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Provides information for the dwSpecialFlags field in SCCDATREENODELOCATOR.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="param1" type="xsd:hexBinary" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Provides information for the dwData1 field in SCCDATREENODELOCATOR.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="param2" type="xsd:hexBinary" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Provides information for the dwData2 field in SCCDATREENODELOCATOR.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="error" mixed="true">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Error code and description.<br/>
				Generated by the SCCOPT_XML_SEARCHML_FLAGS option<br/>
				with the SCCEX_XML_ENABLEERRORINFO flag set.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="code" type="xsd:hexBinary" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Binary value of the error encountered during processing.  See sccerr.h for a list of the possible values.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="doc_property" mixed="true">
		<xsd:annotation>
			<xsd:documentation>
				Doc_property elements contain the text of document meta data (such as document title, see below).

				When the type attribute is "xmp_metadata" the doc_property element will contain XMP metadata.
				XMP metadata can appear within either the "adobe:ns:meta/" or the rdf namespace so both are allowed.  When
				XMP parsing is enabled, the namespace will be specified with a special doc_property with type="xmpnamespace".  
				Also, nested XMP document may be concatenated into a single property since the SearchML schema doesn't allow 
				nesting of doc_property elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:any namespace="adobe:ns:meta/ http://www.w3.org/1999/02/22-rdf-syntax-ns#" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="type" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
				Describes the property.  Common values for this attribute are:&lt;br&gt;&lt;br&gt;

				comment, keyword, last_saved_by,&lt;br&gt;
				primary_author, subject, title, abstract,&lt;br&gt;
				account, address, attachments,&lt;br&gt;
				authorization, backup_date,&lt;br&gt;
				bill_to, blind_copy, carbon_copy,&lt;br&gt;
				category, checked_by, client,&lt;br&gt;
				completed_date, character_count,&lt;br&gt;
				page_count, word_count, creation_date,&lt;br&gt;
				department, destination, disposition,&lt;br&gt;
				division, edit_minutes, editor, forward_to,&lt;br&gt;
				group, language, last_print_date,&lt;br&gt;
				mail_stop, matter, office, operator,&lt;br&gt;
				owner, project, publisher, purpose,&lt;br&gt;
				received_from, recorded_by,&lt;br&gt;
				recorded_date, reference, revision_date,&lt;br&gt;
				revision_notes, revision_number,&lt;br&gt;
				secondary_author, section, security,&lt;br&gt;
				source, status, doc_type, typist,&lt;br&gt;
				version_date, version_notes, version_number,&lt;br&gt;
				base_file_location, manager, company, xmp_metadata
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="doc_content">
		<xsd:annotation>
			<xsd:documentation>
				doc_content acts as a container for a document's {@link p paragraphs}, or for other {@link document documents}.
				They, along with {@link doc_properties} elements are used to separate the content and properties portions of
				a {@link document}.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="p" type="s:p"/>
			<xsd:element name="ocr" type="s:ocr"/>
			<xsd:element name="document" type="s:document"/>
			<xsd:element name="doc_content" type="s:doc_content"/>
			<xsd:element name="sheet" type="s:sheet"/>
			<xsd:element name="cell" type="s:cell"/>
			<xsd:element name="note" type="s:note"/>
		</xsd:choice>
		<xsd:attribute name="type" type="s:EDocContentType" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Describes what kind, or the intent of, the container that this doc_content is.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="id" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					If the &apos;id&apos; attribute is present, it may be referred to by a &apos;note&apos; element indicating the type of annotation associated with the doc_content.  
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="name" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Provides the associated name if a name was available.  This will only be seen with doc_content whose type is &apos;slide&apos;.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		
		<xsd:attribute name="first_page" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					On if this applies to the first page, regardless whether it's even or odd.  This will only be seen with doc_content whose type is &apos;header&apos; or &apos;footer&apos;.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="even_pages" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					On if this applies to even pages.  This will only be seen with doc_content whose type is &apos;header&apos; or &apos;footer&apos;.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="odd_pages" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					On if this applies to odd pages.  This will only be seen with doc_content whose type is &apos;header&apos; or &apos;footer&apos;.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="exclude_first_page" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					On if this should not be applied to the first page.  This will only be seen with doc_content whose type is &apos;header&apos; or &apos;footer&apos;.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
    <xsd:attribute name="hidden" type="s:EOnOff" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          Only applies to slides and implies that the slide is hidden in the slide show
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="cell">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				A cell represents row and column data in a SS.  The &apos;start&apos; attribute denotes either the location of the cell or
				the starting location of a merged range of cells.  The &apos;end&apos; attribute if present denotes the end of a merged
				range of cells.  Letters are used for column designations, and numbers are used for rows i.e. A1 represents
				row 1 column 1, and ABC731 represents row 731, column 731.  4,294,967,294 rows and 4,294,967,294
				columns can be tracked.<br/>
				Generated by the SCCOPT_XML_SEARCHML_FLAGS option<br/>
				with the SCCEX_IND_SS_CELLINFO flag set. <br/>
				 In order to get numeric cells, SCCEX_IND_GENERATED must be set.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="p" type="s:p"/>
			<xsd:element name="ocr" type="s:ocr"/>
			<xsd:element name="document" type="s:document"/>
			<xsd:element name="doc_content" type="s:doc_content"/>
			<xsd:element name="generated" type="s:generated"/>
			<xsd:element name="note" type="s:note"/>
			<xsd:element name="bookmark" type="s:bookmark"/>
		</xsd:choice>
		<xsd:attribute name="start" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Text and number combination representing the cell or the first cell in a group of merged cells.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="end" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Text and number combination representing the last cell in a group of merged cells.
				</xsd:documentation>
			</xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="hidden" type="s:EOnOff" use="optional">
            <xsd:annotation>
				<xsd:documentation><![CDATA[
                    Hidden cell.  Optionally, SearchML can be configured to track wether or not a cell is contained
                    within a hidden row or column.<br/>
					Generated by the SCCOPT_XML_SEARCHML_FLAGS option<br/>
					with the SCCEX_IND_SS_CELLHIDDEN flag set.
				]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    <xsd:attribute name="sheet" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          In revision delete blocks, the sheet on which the cell is located.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="ocr" mixed="true">
		<xsd:annotation>
			<xsd:documentation>
				Not currently implemented.
                         	 	Each ocr element represents a single paragraph of text gathered using
                            	optical character recognition.  This text is never countable.
                            </xsd:documentation>
		</xsd:annotation>
	</xsd:complexType>
	<xsd:complexType name="generated" mixed="true">
		<xsd:annotation>
			<xsd:documentation>
				Generated Text.  Generated text comes from such items as date,
				time, or number formatting.  It was not actually text in the input
				document, and does not count towards offset.  One example
				of Generated Text would be numbers in spreadsheets.
				Generated by the SCCOPT_XML_SEARCHML_FLAGS option
				with the SCCEX_IND_GENERATED flag set.
			 </xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="r" type="s:r"/>
			<xsd:element name="record" type="s:record"/>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="record">
		<xsd:annotation>
			<xsd:documentation>
			Archive record.  record represents an entry in an archive and contains an archived sub-document.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="p" type="s:p"/>
			<xsd:element name="ocr" type="s:ocr"/>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="p" mixed="true">
		<xsd:annotation>
			<xsd:documentation>
				p, or paragraph elements contain the actual text content of a document.  They may also contain elements for
				tagging sections of that content, (see {@link begin_tag} and {@link end_tag}), or for delineating sub content
				or sub documents.  p elements also contain attributes describing the style of the paragraph.  The p element 
				will only be present if text is present.  The style related attributes('fli', 'h', 'li', 'oce', 'ri', 'spacing') will be applied to the first text 
				in the document.  Any changes to style attributes in the middle of a paragraph will be ignored.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="begin_tag" type="s:begin_tag"/>
			<xsd:element name="end_tag" type="s:end_tag"/>
			<xsd:element name="document" type="s:document"/>
			<xsd:element name="doc_content" type="s:doc_content"/>
			<xsd:element name="doc_property" type="s:doc_property"/>
			<xsd:element name="r" type="s:r"/>
			<xsd:element name="offset" type="s:offset">
				<xsd:annotation>
					<xsd:documentation>
                        				Text offset.  The offset specified flows until the end of the
			             		enclosing p or the next specified offset.
                    			</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="generated" type="s:generated"/>
			<xsd:element name="record" type="s:record"/>
			<xsd:element name="unmapped" type="s:unmapped"/>
			<xsd:element name="bookmark" type="s:bookmark"/>
			<xsd:element name="tree_node_locator" type="s:tree_node_locator"/>
			<xsd:element name="target" type="s:target"/>
      <xsd:element name="ss_revision" type="s:ss_revision"/>
    </xsd:choice>
		<xsd:attribute name="s" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Style name.  Generated by the SCCOPT_XML_SEARCHML_FLAGS option
					with the SCCEX_XML_PSTYLENAMES flag set.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="spacing" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Line spacing, in twips.<br/>
					Generated by the SCCOPT_XML_SEARCHML_PARA_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_SPACING flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="h" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Height, in twips.<br/>
					Generated by the SCCOPT_XML_SEARCHML_PARA_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_HEIGHT flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ri" type="xsd:integer" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Right indent, in twips.<br/>
					Generated by the SCCOPT_XML_SEARCHML_PARA_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_RIGHTINDENT flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="li" type="xsd:integer" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Left indent, in twips.<br/>
					Generated by the SCCOPT_XML_SEARCHML_PARA_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_LEFTINDENT flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="fli" type="xsd:integer" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					First line indent, in twips.<br/>
					Generated by the SCCOPT_XML_SEARCHML_PARA_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_FIRSTINDENT flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="offset" type="xsd:nonNegativeInteger" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Text offset.<br/>
					Generated by the SCCOPT_XML_SEARCHML_OFFSET option.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="oce" type="xsd:hexBinary" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
				Original Character Encoding.  If oce is requested it will appear early
				in the document, and will only appear on either a paragraph or run when
				it changes.  Hexidecimal values can be found in charsets.h<br/>
				Generated by the SCCOPT_XML_SEARCHML_CHAR_ATTRS option<br/>
				with the SCCEX_XML_SEARCHML_OCE flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="r" mixed="true">
		<xsd:annotation>
			<xsd:documentation>
				Text run.  A text run will be generated when a tracked character attribute changes within a paragraph.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="begin_tag" type="s:begin_tag"/>
			<xsd:element name="end_tag" type="s:end_tag"/>
			<xsd:element name="generated" type="s:generated"/>
			<xsd:element name="unmapped" type="s:unmapped"/>
			<xsd:element name="offset" type="s:offset">
				<xsd:annotation>
					<xsd:documentation>
						Text offset.  The offset specified flows out from the parent run
						influencing all following content and runs until the end of the
						enclosing p or the next specified offset.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="target" type="s:target"/>
			<xsd:element name="bookmark" type="s:bookmark"/>
		</xsd:choice>
		<xsd:attribute name="b" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Bold.  While this attribute can be set to on or off, there is no
					compelling reason to set it to off since off is the default value.<br/>
					Generated by the SCCOPT_XML_SEARCHML_CHAR_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_BOLD flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="i" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Italic.  While this attribute can be set to on or off, there is no
					compelling reason to set it to off since off is the default value.<br/>
					Generated by the SCCOPT_XML_SEARCHML_CHAR_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_ITALIC flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="u" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Underline.  While this attribute can be set to on or off, there is no
					compelling reason to set it to off since off is the default value.<br/>
					Generated by the SCCOPT_XML_SEARCHML_CHAR_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_UNDERLINE flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="du" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Double Underline.  While this attribute can be set to on or off,
					there is no compelling reason to set it to off since off is the
					default value.<br/>
					Generated by the SCCOPT_XML_SEARCHML_CHAR_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_DUNDERLINE flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="outline" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Outline.  While this attribute can be set to on or off, there is no
					compelling reason to set it to off since off is the default value.<br/>
					Generated by the SCCOPT_XML_SEARCHML_CHAR_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_OUTLINE flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="hidden" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Hidden text.  Optionally, SearchML can be prevented from producing hidden text.  If content
					has been both hidden and deleted and SearchML related options indicate that either deleted or
					hidden text but not both should be displayed, then the text is NOT displayed.  This behavior
					was designed to emulate common word processing programs such as Microsoft Word.<br/>
					Generated by the SCCOPT_XML_SEARCHML_CHAR_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_HIDDEN flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="so" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Strike Out.  While this attribute can be set to on or off, there is no
					compelling reason to set it to off since off is the default value.<br/>
					Generated by the SCCOPT_XML_SEARCHML_CHAR_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_STRIKEOUT flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="smallcaps" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Small Caps.  While this attribute can be set to on or off, there is no
					compelling reason to set it to off since off is the default value.<br/>
					Generated by the SCCOPT_XML_SEARCHML_CHAR_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_SMALLCAPS flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="allcaps" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					All Caps.  While this attribute can be set to on or off, there is no
					compelling reason to set it to off since off is the default value.<br/>
					Generated by the SCCOPT_XML_SEARCHML_CHAR_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_ALLCAPS flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="oce" type="xsd:hexBinary" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
				Original Character Encoding.  If oce is requested it will appear early
				in the document, and will only appear on either a paragraph or run when
				it changes.  Hexidecimal values can be found in charsets.h<br/>
				Generated by the SCCOPT_XML_SEARCHML_CHAR_ATTRS option<br/>
				with the SCCEX_XML_SEARCHML_OCE flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unknown_mapping" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Turned on when the Unicode mapping table is missing from a PDF font.  
					This indicates that the character mapping may or may not be accurate.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="del" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Text that has been deleted using a revision.  Optionally, SearchML can be prevented from producing
					deleted text.  If content has been both hidden and deleted and SearchML related options indicate that
					either deleted or hidden text but not both should be displayed, then the text is NOT displayed.  This
					behavior was designed to emulate common word processing programs such as Microsoft Word.<br/>
					Generated by the SCCOPT_XML_SEARCHML_CHAR_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_REVISIONDELETE flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="add" type="s:EOnOff" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					Text that has been added using a revision.<br/>
					Generated by the SCCOPT_XML_SEARCHML_CHAR_ATTRS option<br/>
					with the SCCEX_XML_SEARCHML_REVISIONADD flag set.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="offset">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Text offset.  The offset specified flows out from the parent run
				influencing all following content and runs until the end of the
				enclosing p or the next specified offset.<br/>
				Generated by the SCCOPT_XML_SEARCHML_OFFSET option.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="value" type="xsd:nonNegativeInteger" use="required">
			<xsd:annotation>
				<xsd:documentation>
					The number of countable text characters encountered in the document to this point.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="begin_tag">
		<xsd:annotation>
			<xsd:documentation>
				Begins a &amp;quot;tagged&amp;quot; area of textual content, the interpretation of which depends on the value of this element's
				&amp;quot;type&amp;quot; attribute.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="type" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Defines the intent, or purpose of this &amp;quot;tagged&amp;quot; area of textual content.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="url" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation><![CDATA[
					The url attribute will only appear on tags with a type of hyperlink.  It represents the address
					associated with the hyperlink.<br/>
					Generated by the SCCOPT_XML_SEARCHML_FLAGS option<br/>
					with the SCCEX_PRODUCEURLS flag set.
					While the intent of this attribute is to be a URI, the value can come directly from an input file, so it will not
					always be guaranteed to be a valid URI.  For validation purposes the type of this attribute is string.
				]]></xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="name" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Certain tags, such as note references, can have text associated with the tag.  
					This text will appear in the name attribute.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="bookmark" type="xsd:IDREF" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Not currently implemented.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="end_tag">
		<xsd:annotation>
			<xsd:documentation>
				Ends a &amp;quot;tagged&amp;quot; area of textual content, matching the most recent {@link begin_tag} with an identical
				&amp;quot;type&amp;quot; attribute.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="type" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Defines the intent, or purpose of this &amp;quot;tagged&amp;quot; area of textual content.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:simpleType name="EOnOff">
		<xsd:annotation>
			<xsd:documentation>
				Defines possible values of &amp;quot;on&amp;quot; or &amp;quot;off&amp;quot;.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="on"/>
			<xsd:enumeration value="off"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EDocContentType">
		<xsd:annotation>
			<xsd:documentation>
				Defines the possible values for the &amp;quot;type&amp;quot; of content a {@link doc_content} container element may contain.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="body">
				<xsd:annotation>
					<xsd:documentation>
						Normal document content.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="sub_doc"/>
			<xsd:enumeration value="frame"/>
			<xsd:enumeration value="text_box"/>
			<xsd:enumeration value="header"/>
			<xsd:enumeration value="footer"/>
			<xsd:enumeration value="slide_note"/>
			<xsd:enumeration value="slide"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="sheet">
		<xsd:annotation>
			<xsd:documentation>
				Sheet Element.  This element represents information related to sheets.  The name of a
				worksheet in a spreadsheet, for example.  If the name attribute is missing, this
				indicates that a sheet is present, but no name information was available.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="name" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Provides the name of the sheet if a name was available.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
    <xsd:attribute name="number" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          Provides the number of the sheet in revision delete blocks.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="oldname" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          Provides the old name of the sheet in revision delete blocks.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
	</xsd:complexType>
	<xsd:simpleType name="ENoteType">
		<xsd:annotation>
			<xsd:documentation>
				Defines the possible types of a note element.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="footnote"/>
			<xsd:enumeration value="endnote"/>
			<xsd:enumeration value="annotation"/>
			<xsd:enumeration value="note"/>
			<xsd:enumeration value="comment"/>
			<xsd:enumeration value="slide_note"/>
			<xsd:enumeration value="unknown"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="note">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Note Element.  Conceptually, a note represents an annotation to a document&apos;s primary
				text.  In practice, a note element provides the type of annotation and an identifier
				which will match an id attribute on a doc_content element which will actually contain
				the content of the annotation.  For example:<br/><br/>
				&lt;note type="footnote" id="x40000001"/&gt;<br/>
				&lt;doc_content type="sub_doc" id="x40000001"&gt;<br/>
					&lt;p&gt;This is a footnote.&lt;/p&gt;<br/>
				&lt;/doc_content&gt;<br/>
				Generated by the SCCOPT_XML_SEARCHML_FLAGS option<br/>
				with the SCCEX_ANNOTATIONS flag set.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="type" type="s:ENoteType" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Type of note, such as: footnote, endnote, or annotation.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="id" type="xsd:IDREF" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Identifier to match an id attribute in a doc_content element.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="unmapped" mixed="true">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				Unmapped Element.  This element contains base64 encoded textual data, but with no character mapping
				applied.  Runs representing interesting character attributes can appear in the unmapped element.  Text
				appearing inside runs that are, in turn, inside unmapped elements will be base64 encoded.  The unmapped
				element has two required attributes used to help interpret the data: the original character set, and the font
				name applied to the the text.<br/>
				Generated by the SCCOPT_XML_SEARCHML_UNMAPPEDTEXT option.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="r" type="s:r"/>
		</xsd:choice>
		<xsd:attribute name="oce" type="xsd:hexBinary" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Original Character Encoding of the text.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="font" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>
					Name of the font used for the original text.  Especially useful for fonts like Wingdings.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="bookmark">
		<xsd:annotation>
			<xsd:documentation>
				Bookmark Element.
				This element is used as a target and a grouping mechanism for internal linking
				similarly to a bookmark in a word processing document or an internal link in a spreadsheet.  
				The bookmark element can also have a type element describing the type of referenced content.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="target" type="s:target"/>
		</xsd:choice>
		<xsd:attribute name="name" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					An ID for this bookmark that will be referenced by the bookmark attribute in a begin_tag element.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="type" type="s:EBookmarkType" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Indicates the type of reference in the bookmark.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="id" type="xsd:IDREF" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					An optional reference used to associate type information.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:simpleType name="EBookmarkType">
		<xsd:annotation>
			<xsd:documentation>
				Defines the possible values for the &amp;quot;type&amp;quot; of a {@link bookmark} element.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="comment_paragraph"/>
			<xsd:enumeration value="comment_cell"/>
			<xsd:enumeration value="comment_slide"/>
			<xsd:enumeration value="comment_vector_page"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="target">
		<xsd:annotation>
			<xsd:documentation>
				This element is used to describe an internal hyperlink or bookmark.  It will contain 
				the name of the hyperlink/bookmark, if one exists.  The name will not be countable text.  
				When describing an internal hyperlink in a spreadsheet, the target element will have a 
				sheet attribute describing the sheet of the link destination.  In this case, the start_cell
				and/or end_cell attribute may also be present.  The start_cell attribute indicates the start
				of targeted group of cells.  If the target range has more than a single cell, an end_cell 
				attribute will indicate the end of the target area.  More than one target may be present 
				in a single bookmark as an internal link can be made to a set of discontinuous cells.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleContent>
		  <xsd:extension base="xsd:string">
			<xsd:attribute name="sheet" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						Sheet to which the link points.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="start_cell" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						Start cell of the link.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="end_cell" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						End cell of the link.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		  </xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
  <xsd:complexType name="row">
    <xsd:annotation>
      <xsd:documentation>
        In revision delete information blocks, provides information about a row or a set of rows.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="start" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>
          Starting row.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="end" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          Ending row.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="sheet" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          Sheet on which the rows appear.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="column">
    <xsd:annotation>
      <xsd:documentation>
        In revision delete information blocks, provides information about a column or a set of columns.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="start" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>
          Starting column.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="end" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          Ending column.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="sheet" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          Sheet on which the columns appear.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:simpleType name="RevisionType">
    <xsd:annotation>
      <xsd:documentation>
        Defines the possible values for the &amp;quot;type&amp;quot; of content a {@link ss_revision} container element may contain.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="revisions">
        <xsd:annotation>
          <xsd:documentation>
            Container for all other ss_revision elements.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="addrow">
        <xsd:annotation>
          <xsd:documentation>
            Add one or more rows.  Will contain a row element.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="addsheet">
        <xsd:annotation>
          <xsd:documentation>
            Add one or more sheets.  Will contain a sheet element.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="clearcell">
        <xsd:annotation>
          <xsd:documentation>
            Clear the contents of a cell.  Will contain a cell element.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="create">
        <xsd:annotation>
          <xsd:documentation>
            Initial creation of the document.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="deletecolumn">
        <xsd:annotation>
          <xsd:documentation>
            Delete one or more columns.  Will contain a column element and may contain a newcell.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="deleterow">
        <xsd:annotation>
          <xsd:documentation>
            Delete one or more rows.  Will contain a row element and may contain a newcell.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="format">
        <xsd:annotation>
          <xsd:documentation>
            Formatting information.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="insertcolumn">
        <xsd:annotation>
          <xsd:documentation>
            Insert one or more columns.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="modifycell">
        <xsd:annotation>
          <xsd:documentation>
            Change the contents of a cell.  Will contain a cell element and content elements.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="movecell">
        <xsd:annotation>
          <xsd:documentation>
            Move a cell.  Will contain location elements.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="newcell">
        <xsd:annotation>
          <xsd:documentation>
            Create a new cell.  Will contain a cell element and optionally the contents of the new cell.
            This element may also appear in some delete operations to note the location of the deleted cell.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="newcellcontent">
        <xsd:annotation>
          <xsd:documentation>
            Contains the contents of a new cell.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="newcelllocation">
        <xsd:annotation>
          <xsd:documentation>
            Describes the new cell locations.  Contains two cells describing the upper left and lower right 
            corrdinates of the cell block.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="oldcellcontent">
        <xsd:annotation>
          <xsd:documentation>
            Contains the prior contents of a deleted cell.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="oldcelllocation">
      <xsd:annotation>
        <xsd:documentation>
          Describes the old cell locations.  Contains two cells describing the upper left and lower right
          corrdinates of the cell block.
        </xsd:documentation>
      </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="renamesheet">
        <xsd:annotation>
          <xsd:documentation>
            Contains a sheet element referencing the new and old sheet names.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="save">
        <xsd:annotation>
          <xsd:documentation>
            Save the spread sheet.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="sheetname">
        <xsd:annotation>
          <xsd:documentation>
            Contains the number and name of a sheet.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="sheetnames">
        <xsd:annotation>
          <xsd:documentation>
            Container for sheetname elements.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="user">
        <xsd:annotation>
          <xsd:documentation>
            Contains the prior contents of a user.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="usernames">
        <xsd:annotation>
          <xsd:documentation>
            Container for user elements.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ss_revision" mixed="true">
    <xsd:annotation>
      <xsd:documentation>
        Track changes details for Excle documents with SCCOPT_GENERATEEXCELREVISIONS enabled.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="ss_revision" type="s:ss_revision"/>
      <xsd:element name="p" type="s:p"/>
      <xsd:element name="generated" type="s:generated"/>
      <xsd:element name="sheet" type="s:sheet"/>
      <xsd:element name="cell" type="s:cell"/>
      <xsd:element name="row" type="s:row"/>
      <xsd:element name="column" type="s:column"/>
      <xsd:element name="offset" type="s:offset"/>
    </xsd:choice>
    <xsd:attribute name="type" type="s:RevisionType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          Defines the intent, or purpose of this &amp;quot;tagged&amp;quot; area of track changes.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="seqid" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          Order of the track changes elements.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="id" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          User id of person performing the change.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="date" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          When the change was made.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          Only valid for user and sheetname.  The provides the name of the user or sheet.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>
